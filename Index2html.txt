<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dutch Learning Assistant</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
            color: #333;
            min-height: 100vh;
            padding: 20px;
        }
        
        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 20px 0;
            margin-bottom: 30px;
        }
        
        h1 {
            font-size: 2.8rem;
            color: white;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            margin-bottom: 10px;
        }
        
        .subtitle {
            font-size: 1.2rem;
            color: #ffeb3b;
            font-weight: 500;
        }
        
        .navigation {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .nav-btn {
            padding: 15px 30px;
            font-size: 1.2rem;
            background: #ff7043;
            color: white;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            font-weight: 600;
        }
        
        .nav-btn:hover {
            background: #ff5722;
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }
        
        .nav-btn.active {
            background: #f4511e;
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }
        
        .page {
            background: rgba(255, 255, 255, 0.92);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            min-height: 500px;
            display: none;
        }
        
        .page.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .page-title {
            text-align: center;
            margin-bottom: 30px;
            color: #1a237e;
            font-size: 2.2rem;
            position: relative;
            padding-bottom: 15px;
        }
        
        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, #ff7043, #1a237e);
            border-radius: 2px;
        }
        
        /* Learn Page Styles */
        .vocabulary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
        }
        
        .vocab-card {
            background: linear-gradient(145deg, #ffffff, #f0f0f0);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }
        
        .vocab-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }
        
        .dutch-word {
            font-size: 1.8rem;
            font-weight: bold;
            color: #1a237e;
            margin-bottom: 10px;
            text-transform: capitalize;
        }
        
        .english-word {
            font-size: 1.3rem;
            color: #ff7043;
            font-style: italic;
            margin-bottom: 20px;
        }
        
        .speak-btn {
            background: #1a237e;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 30px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .speak-btn:hover {
            background: #283593;
            transform: scale(1.05);
        }
        
        /* Dictate Page Styles */
        .dictate-container {
            max-width: 700px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .input-container {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
        }
        
        #dutchInput {
            flex: 1;
            padding: 15px 20px;
            border: 2px solid #ddd;
            border-radius: 50px;
            font-size: 1.2rem;
            transition: all 0.3s ease;
            outline: none;
        }
        
        #dutchInput:focus {
            border-color: #1a237e;
            box-shadow: 0 0 0 3px rgba(26, 35, 126, 0.2);
        }
        
        .action-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-bottom: 30px;
        }
        
        .action-btn {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            border: none;
            background: #1a237e;
            color: white;
            font-size: 1.8rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .action-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }
        
        .action-btn.translate {
            background: #ff7043;
        }
        
        .result-card {
            background: linear-gradient(145deg, #e3f2fd, #bbdefb);
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .result-title {
            font-size: 1.5rem;
            color: #1a237e;
            margin-bottom: 15px;
            font-weight: 600;
        }
        
        .dutch-result {
            font-size: 2rem;
            font-weight: bold;
            color: #1a237e;
            margin-bottom: 10px;
        }
        
        .english-result {
            font-size: 1.8rem;
            color: #ff7043;
            font-style: italic;
        }
        
        .instructions {
            text-align: center;
            margin-top: 30px;
            font-size: 1.1rem;
            color: #555;
            background: rgba(255, 255, 255, 0.7);
            padding: 15px;
            border-radius: 10px;
            max-width: 800px;
            margin: 30px auto 0;
        }
        
        .footer {
            text-align: center;
            color: white;
            margin-top: 30px;
            padding: 20px;
            font-size: 1rem;
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .vocabulary-grid {
                grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            }
            
            .input-container {
                flex-direction: column;
            }
            
            .nav-btn {
                padding: 12px 20px;
                font-size: 1rem;
            }
            
            h1 {
                font-size: 2.2rem;
            }
        }
        
        @media (max-width: 480px) {
            .vocabulary-grid {
                grid-template-columns: 1fr;
            }
            
            .page {
                padding: 20px 15px;
            }
            
            .navigation {
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Dutch Learning Assistant</h1>
            <div class="subtitle">Master Dutch vocabulary with interactive tools</div>
        </header>
        
        <div class="navigation">
            <button class="nav-btn active" id="learnBtn">Learn Vocabulary</button>
            <button class="nav-btn" id="dictateBtn">Practice Dictation</button>
        </div>
        
        <div id="learnPage" class="page active">
            <h2 class="page-title">Dutch Vocabulary List</h2>
            <div class="vocabulary-grid" id="vocabularyList">
                <!-- Vocabulary cards will be generated here -->
            </div>
        </div>
        
        <div id="dictatePage" class="page">
            <h2 class="page-title">Dutch Dictation Practice</h2>
            <div class="dictate-container">
                <div class="input-container">
                    <input type="text" id="dutchInput" placeholder="Enter a Dutch word...">
                </div>
                
                <div class="action-buttons">
                    <button class="action-btn speak" id="speakBtn">
                        <i class="fas fa-volume-up"></i>
                    </button>
                    <button class="action-btn translate" id="translateBtn">
                        <i class="fas fa-language"></i>
                    </button>
                </div>
                
                <div class="result-card" id="resultCard" style="display: none;">
                    <div class="result-title">Translation:</div>
                    <div class="dutch-result" id="dutchResult"></div>
                    <div class="english-result" id="englishResult"></div>
                </div>
                
                <div class="instructions">
                    <p><strong>How to practice:</strong> Type a Dutch word in the input field. Click the speaker icon to hear pronunciation. Click the translation icon to see the English equivalent.</p>
                </div>
            </div>
        </div>
        
        <div class="footer">
            <p>Dutch Learning Assistant &copy; 2023 | Use headphones for best experience</p>
        </div>
    </div>

    <script>
        // Vocabulary data with Dutch words and their English translations
        const vocabulary = [
            { dutch: "herinvoer", english: "re-entry" },
            { dutch: "tijden", english: "times" },
            { dutch: "kantelen", english: "to tilt" },
            { dutch: "machine", english: "machine" },
            { dutch: "niet betreden", english: "do not enter" },
            { dutch: "kinderwagen", english: "stroller" },
            { dutch: "afvoer", english: "drain" },
            { dutch: "vervoer", english: "transport" },
            { dutch: "aanvoer", english: "supply" },
            { dutch: "verspreid", english: "spread" },
            { dutch: "snelheid", english: "speed" },
            { dutch: "blauwe bak", english: "blue bin" },
            { dutch: "tent", english: "tent" },
            { dutch: "ingang", english: "entrance" },
            { dutch: "hoofdingang", english: "main entrance" },
            { dutch: "bocht", english: "bend" },
            { dutch: "schakelaar", english: "switch" },
            { dutch: "beschadig", english: "damage" },
            { dutch: "stukken", english: "pieces" },
            { dutch: "bekomstig", english: "obtain" },
            { dutch: "bruin", english: "brown" },
            { dutch: "blauw", english: "blue" },
            { dutch: "rode", english: "red" },
            { dutch: "roze", english: "pink" },
            { dutch: "violet", english: "violet" },
            { dutch: "geel", english: "yellow" },
            { dutch: "groen", english: "green" },
            { dutch: "zwart", english: "black" },
            { dutch: "grijs", english: "gray" },
            { dutch: "buffer", english: "buffer" },
            { dutch: "vast", english: "fixed" },
            { dutch: "printkop", english: "print head" },
            { dutch: "label", english: "label" },
            { dutch: "limiet", english: "limit" },
            { dutch: "verifiëren", english: "verify" },
            { dutch: "heftruck", english: "forklift" },
            { dutch: "noodgeval", english: "emergency" },
            { dutch: "verboden", english: "forbidden" },
            { dutch: "verzoek intrekken", english: "withdraw request" },
            { dutch: "onbestelbare", english: "undeliverable" },
            { dutch: "collectieve arbeidsovereenkomst", english: "collective labor agreement" }
        ];
        
        // DOM Elements
        const learnBtn = document.getElementById('learnBtn');
        const dictateBtn = document.getElementById('dictateBtn');
        const learnPage = document.getElementById('learnPage');
        const dictatePage = document.getElementById('dictatePage');
        const vocabularyList = document.getElementById('vocabularyList');
        const dutchInput = document.getElementById('dutchInput');
        const speakBtn = document.getElementById('speakBtn');
        const translateBtn = document.getElementById('translateBtn');
        const resultCard = document.getElementById('resultCard');
        const dutchResult = document.getElementById('dutchResult');
        const englishResult = document.getElementById('englishResult');
        
        // Initialize the vocabulary list
        function initVocabularyList() {
            vocabularyList.innerHTML = '';
            vocabulary.forEach(word => {
                const card = document.createElement('div');
                card.className = 'vocab-card';
                card.innerHTML = `
                    <div class="dutch-word">${word.dutch}</div>
                    <div class="english-word">${word.english}</div>
                    <button class="speak-btn" onclick="speakWord('${word.dutch}')">
                        <i class="fas fa-volume-up"></i> Speak
                    </button>
                `;
                vocabularyList.appendChild(card);
            });
        }
        
        // Function to speak a word using Web Speech API
        function speakWord(word) {
            if ('speechSynthesis' in window) {
                const utterance = new SpeechSynthesisUtterance(word);
                utterance.lang = 'nl-NL'; // Dutch language
                utterance.rate = 0.9; // Slightly slower for learning
                
                // Highlight the word being spoken
                const cards = document.querySelectorAll('.vocab-card');
                cards.forEach(card => {
                    const dutchWord = card.querySelector('.dutch-word').textContent;
                    if (dutchWord === word) {
                        card.style.transform = 'scale(1.05)';
                        card.style.boxShadow = '0 10px 25px rgba(0, 0, 0, 0.2)';
                        card.style.backgroundColor = '#e3f2fd';
                        
                        setTimeout(() => {
                            card.style.transform = '';
                            card.style.boxShadow = '';
                            card.style.backgroundColor = '';
                        }, 1500);
                    }
                });
                
                speechSynthesis.speak(utterance);
            } else {
                alert('Your browser does not support speech synthesis. Try Chrome or Edge.');
            }
        }
        
        // Function to translate the entered word
        function translateWord() {
            const word = dutchInput.value.trim();
            if (!word) {
                alert('Please enter a Dutch word first');
                return;
            }
            
            // Find the word in vocabulary (case-insensitive)
            const foundWord = vocabulary.find(item => 
                item.dutch.toLowerCase() === word.toLowerCase()
            );
            
            if (foundWord) {
                dutchResult.textContent = foundWord.dutch;
                englishResult.textContent = foundWord.english;
                resultCard.style.display = 'block';
            } else {
                dutchResult.textContent = word;
                englishResult.textContent = 'Translation not found';
                resultCard.style.display = 'block';
            }
        }
        
        // Event Listeners
        learnBtn.addEventListener('click', () => {
            learnBtn.classList.add('active');
            dictateBtn.classList.remove('active');
            learnPage.classList.add('active');
            dictatePage.classList.remove('active');
        });
        
        dictateBtn.addEventListener('click', () => {
            dictateBtn.classList.add('active');
            learnBtn.classList.remove('active');
            dictatePage.classList.add('active');
            learnPage.classList.remove('active');
            dutchInput.focus();
        });
        
        speakBtn.addEventListener('click', () => {
            const word = dutchInput.value.trim();
            if (word) {
                speakWord(word);
            } else {
                alert('Please enter a Dutch word first');
            }
        });
        
        translateBtn.addEventListener('click', translateWord);
        
        // Allow pressing Enter in input field to trigger translation
        dutchInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                translateWord();
            }
        });
        
        // Initialize the page
        window.onload = function() {
            initVocabularyList();
            
            // Initialize speech synthesis voices
            if ('speechSynthesis' in window) {
                speechSynthesis.getVoices();
            }
        };
    </script>
</body>
</html>